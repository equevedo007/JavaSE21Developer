Oracle Certified Professional: Java SE 21 Developer
Java SE 21 Developer Exam Number: 1Z0-830

1.	Handling Date, Time, Text, Numeric and Boolean Values

•	Use primitives and wrapper classes. Evaluate arithmetic and boolean expressions, using the Math API and by applying precedence rules, type conversions, and casting.
•	Manipulate text, including text blocks, using String and StringBuilder classes.
•	Manipulate date, time, duration, period, instant and time-zone objects including daylight saving time using Date-Time API.

2.	Controlling Program Flow 

•	Create program flow control constructs including if/else, switch statements and expressions, loops, and break and continue statements.

3.	Using Object-Oriented Concepts in Java

•	Declare and instantiate Java objects including nested class objects, and explain the object life-cycle including creation, reassigning references, and garbage collection.
•	Create classes and records, and define and use instance and static fields and methods, constructors, and instance and static initializers.
•	Implement overloaded methods, including var-arg methods.
•	Understand variable scopes, apply encapsulation, and create immutable objects. Use local variable type inference.
•	Implement inheritance, including abstract and sealed types as well as record classes. Override methods, including that of the Object class. Implement polymorphism and differentiate between object type and reference type. Perform reference type casting, identify object types using the instanceof operator, and pattern matching with the instanceof operator and the switch construct.
•	Create and use interfaces, identify functional interfaces, and utilize private, static, and default interface methods.
•	Create and use enum types with fields, methods, and constructors.

4.	Handling Exceptions

•	Handle exceptions using try/catch/finally, try-with-resources, and multi-catch blocks, including custom exceptions.

5.	Working with Arrays and Collections 
•	Create arrays, List, Set, Map and Deque collections, and add, remove, update, retrieve and sort their elements.

6.	Working with Streams and Lambda expressions 

•	Use Java object and primitive Streams, including lambda expressions implementing functional interfaces, to create, filter, transform, process, and sort data.
•	Perform decomposition, concatenation, and reduction, and grouping and partitioning on sequential and parallel streams.

7.	Packaging and Deploying Java Code   

•	Define modules and expose module content, including that by reflection, and declare module dependencies, define services, providers, and consumers.
•	Compile Java code, create modular and non-modular jars, runtime images, and implement migration to modules using unnamed and automatic modules.
 
8.	Managing Concurrent Code Execution 

•	Create both platform and virtual threads. Use both Runnable and Callable objects, manage the thread lifecycle, and use different Executor services and concurrent API to run tasks.
•	Develop thread-safe code, using locking mechanisms and concurrent API.
•	Process Java collections concurrently and utilize parallel streams.

9.	Using Java I/O API 

•	Read and write console and file data using I/O streams.
•	Serialize and de-serialize Java objects.
•	Construct, traverse, create, read, and write Path objects and their properties using the java.nio.file API.

10.	Implementing Localization

•	Implement localization using locales and resource bundles. Parse and format messages, dates, times, and numbers, including currency and percentage values.
